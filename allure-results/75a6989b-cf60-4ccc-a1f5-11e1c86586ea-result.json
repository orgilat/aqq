{"name": "test_survey_buttons", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchWindowException: Message: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome=135.0.7049.85)\nStacktrace:\n\tGetHandleVerifier [0x00007FF6A0985355+78597]\n\tGetHandleVerifier [0x00007FF6A09853B0+78688]\n\t(No symbol) [0x00007FF6A07391AA]\n\t(No symbol) [0x00007FF6A0711B63]\n\t(No symbol) [0x00007FF6A07BEB6E]\n\t(No symbol) [0x00007FF6A07DEBB2]\n\t(No symbol) [0x00007FF6A07B6EC3]\n\t(No symbol) [0x00007FF6A07803F8]\n\t(No symbol) [0x00007FF6A0781163]\n\tGetHandleVerifier [0x00007FF6A0C2EF0D+2870973]\n\tGetHandleVerifier [0x00007FF6A0C296B8+2848360]\n\tGetHandleVerifier [0x00007FF6A0C46993+2967875]\n\tGetHandleVerifier [0x00007FF6A09A019A+188746]\n\tGetHandleVerifier [0x00007FF6A09A847F+222255]\n\tGetHandleVerifier [0x00007FF6A098D2D4+111236]\n\tGetHandleVerifier [0x00007FF6A098D482+111666]\n\tGetHandleVerifier [0x00007FF6A09735A9+5465]\n\tBaseThreadInitThunk [0x00007FFB32197374+20]\n\tRtlUserThreadStart [0x00007FFB33AFCC91+33]", "trace": "@allure.epic(\"מערכת ניהול סקרים\")\n    @allure.feature(\"ניהול סקרים\")\n    @allure.story(\"בדיקת לחצנים באתר תמורות\")\n    @allure.severity(allure.severity_level.CRITICAL)\n    @allure.tag(\"Selenium\", \"UI\", \"Regression\", \"Automation\")\n    @allure.description_html(\"\"\"\n        <h2>תיאור הבדיקה</h2>\n        <p>בדיקה מקיפה של לחצנים באתר ניהול סקרים, הכוללת מעבר בין מסכים ובדיקות פנימיות\n        על רכיבי ממשק שונים. הבדיקה כוללת:</p>\n        <ul>\n          <li>כניסה למסך ניהול סקרים והתחברות עם שם משתמש וסיסמה.</li>\n          <li>מעבר בין מסכים כמו 'עונות', 'שאלות חובה' ו'חוקים על שאלות'.</li>\n          <li>בדיקות פנימיות הכוללות לחיצות, חזרה למסך הקודם והקלדה בתיבות חיפוש.</li>\n          <li>תיעוד מפורט של כל שלב בדוח Allure.</li>\n        </ul>\n    \"\"\")\n    def test_survey_buttons():\n        driver = webdriver.Chrome()  # פתיחת דפדפן Chrome\n        passed = 0  # ספירת הצלחות\n        failed = 0  # ספירת כישלונות\n    \n        # רשימת הכפתורים במסך ניהול סוציומטרי\n        buttons = [\n            {\"name\": \"ניהול הסקר\", \"xpath\": \"//a[contains(text(), 'ניהול הסקר')]\"},\n            {\"name\": \"ניהול סוציומטרי\", \"xpath\": \"//a[contains(text(), 'ניהול סוציומטרי')]\"},\n            {\"name\": \"עונות\", \"xpath\": \"//input[contains(@value, 'עונות')]\"},\n            {\"name\": \"שאלות חובה\", \"xpath\": \"//input[contains(@value, 'שאלות חובה')]\"},\n            {\"name\": \"חוקים לבדיקת שאלונים חריגים\", \"xpath\": \"//input[contains(@value, 'חוקים לבדיקת שאלונים חריגים')]\"},\n            {\"name\": \"חוקים על שאלות\", \"xpath\": \"//input[contains(@value, 'חוקים על שאלות')]\"},\n            {\"name\": \"כללי השתתפות לפי סוג יחידה\", \"xpath\": \"//input[contains(@value, 'כללי השתתפות לפי סוג יחידה')]\"},\n            {\"name\": \"הגדרת השדות שיופיעו בטבלאות\", \"xpath\": \"//input[contains(@value, 'הגדרת השדות שיופיעו בטבלאות')]\"},\n            {\"name\": \"אופציות לסוציומטרי\", \"xpath\": \"//input[contains(@value, 'אופציות לסוציומטרי')]\"},\n            {\"name\": \"הגדרה וניהול סטטוסים לאירועים\", \"xpath\": \"//input[contains(@value, 'הגדרה וניהול סטטוסים לאירועים')]\"},\n            {\"name\": \"סיבות להוספת או הסרת משתתפים באירוע\", \"xpath\": \"//input[contains(@value, 'סיבות להוספת או הסרת משתתפים באירוע')]\"},\n            {\"name\": \"הגדרת כללי חריגות בגין מידת היכרות\", \"xpath\": \"//input[contains(@value, 'הגדרת שאלונים בהם מותר למחוק נתונים')]\"},  # עדכון XPath לפי הצורך\n            {\"name\": \"רשימת אשכולות לאיגוד קבוצות של היגדים\", \"xpath\": \"//input[contains(@value, 'רשימת אשכולות לאיגוד קבוצות של היגדים')]\"},\n            {\"name\": \"העברת משיבים ממאגר\", \"xpath\": \"//input[contains(@value, 'העברת משיבים ממאגר')]\"},\n            {\"name\": \"ניהול הרשאות משתמשים\", \"xpath\": \"//input[contains(@value, 'ניהול הרשאות משתמשים')]\"},\n            {\"name\": \"של פוטנציאל המשתתפים בסוציומטרי\", \"xpath\": \"//input[contains(@value, 'של פוטנציאל המשתתפים בסוציומטרי')]\"},\n            {\"name\": \"הגדרת חוקי העתקה של נתונים מחושבים לשאלון העזר\", \"xpath\": \"//input[contains(@value, 'הגדרת חוקי העתקה של נתונים מחושבים לשאלון העזר')]\"},\n            {\"name\": \"הגדרת כללים לחוקות חישוב\", \"xpath\": \"//input[contains(@value, 'הגדרת כללים לחוקות חישוב')]\"},\n            {\"name\": \"עריכה שדות במאגר המשיבים\", \"xpath\": \"//input[contains(@value, 'עריכה שדות במאגר המשיבים')]\"},\n            {\"name\": \"הגדרת שאלונים בהם מותר למחוק נתונים\", \"xpath\": \"//input[contains(@value, 'הגדרת שאלונים בהם מותר למחוק נתונים')]\"},\n            {\"name\": \"ייצוא דוחות אישיים\", \"xpath\": \"//input[contains(@value, 'ייצוא דוחות אישיים')]\"},\n            {\"name\": \"שיוך יחידות לאשכול\", \"xpath\": \"//input[contains(@value, 'שיוך יחידות לאשכול')]\"},\n            {\"name\": \"פלט אישי בתיקיית עובד\", \"xpath\": \"//input[contains(@value, 'פלט אישי בתיקיית עובד')]\"},\n             {\"name\": \"ניהול אירועים\", \"xpath\": \"//input[contains(@value, 'ניהול אירועים')]\"},\n        ]\n    \n        def close_alert_if_present():\n            \"\"\"\n            בודקת אם יש חלון Alert פתוח, ואם כן, סוגרת אותו.\n            \"\"\"\n            try:\n                alert = Alert(driver)\n                alert.accept()\n                allure.attach(\"חלון Alert נסגר בהצלחה\", name=\"Alert\", attachment_type=allure.attachment_type.TEXT)\n            except Exception as e:\n                allure.attach(f\"הודעת Alert לא נמצאה: {e}\", name=\"Alert Info\", attachment_type=allure.attachment_type.TEXT)\n    \n        try:\n            with allure.step(\"פתיחת האתר והתחברות\"):\n                driver.get(\"https://www.survey.co.il/pms/MMDANEW/default.asp\")\n                time.sleep(0.5)\n>               username = driver.find_element(By.NAME, \"login\")\n\nauto\\test_survey.py:78: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\..\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:888: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n..\\..\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:429: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x00000215E925B770>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such window\",\"message\":\"no such window: target window already closed\\\\...A09735A9+5465]\\\\n\\\\tBaseThreadInitThunk [0x00007FFB32197374+20]\\\\n\\\\tRtlUserThreadStart [0x00007FFB33AFCC91+33]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchWindowException: Message: no such window: target window already closed\nE       from unknown error: web view not found\nE         (Session info: chrome=135.0.7049.85)\nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF6A0985355+78597]\nE       \tGetHandleVerifier [0x00007FF6A09853B0+78688]\nE       \t(No symbol) [0x00007FF6A07391AA]\nE       \t(No symbol) [0x00007FF6A0711B63]\nE       \t(No symbol) [0x00007FF6A07BEB6E]\nE       \t(No symbol) [0x00007FF6A07DEBB2]\nE       \t(No symbol) [0x00007FF6A07B6EC3]\nE       \t(No symbol) [0x00007FF6A07803F8]\nE       \t(No symbol) [0x00007FF6A0781163]\nE       \tGetHandleVerifier [0x00007FF6A0C2EF0D+2870973]\nE       \tGetHandleVerifier [0x00007FF6A0C296B8+2848360]\nE       \tGetHandleVerifier [0x00007FF6A0C46993+2967875]\nE       \tGetHandleVerifier [0x00007FF6A09A019A+188746]\nE       \tGetHandleVerifier [0x00007FF6A09A847F+222255]\nE       \tGetHandleVerifier [0x00007FF6A098D2D4+111236]\nE       \tGetHandleVerifier [0x00007FF6A098D482+111666]\nE       \tGetHandleVerifier [0x00007FF6A09735A9+5465]\nE       \tBaseThreadInitThunk [0x00007FFB32197374+20]\nE       \tRtlUserThreadStart [0x00007FFB33AFCC91+33]\n\n..\\..\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:232: NoSuchWindowException\n\nDuring handling of the above exception, another exception occurred:\n\n    @allure.epic(\"מערכת ניהול סקרים\")\n    @allure.feature(\"ניהול סקרים\")\n    @allure.story(\"בדיקת לחצנים באתר תמורות\")\n    @allure.severity(allure.severity_level.CRITICAL)\n    @allure.tag(\"Selenium\", \"UI\", \"Regression\", \"Automation\")\n    @allure.description_html(\"\"\"\n        <h2>תיאור הבדיקה</h2>\n        <p>בדיקה מקיפה של לחצנים באתר ניהול סקרים, הכוללת מעבר בין מסכים ובדיקות פנימיות\n        על רכיבי ממשק שונים. הבדיקה כוללת:</p>\n        <ul>\n          <li>כניסה למסך ניהול סקרים והתחברות עם שם משתמש וסיסמה.</li>\n          <li>מעבר בין מסכים כמו 'עונות', 'שאלות חובה' ו'חוקים על שאלות'.</li>\n          <li>בדיקות פנימיות הכוללות לחיצות, חזרה למסך הקודם והקלדה בתיבות חיפוש.</li>\n          <li>תיעוד מפורט של כל שלב בדוח Allure.</li>\n        </ul>\n    \"\"\")\n    def test_survey_buttons():\n        driver = webdriver.Chrome()  # פתיחת דפדפן Chrome\n        passed = 0  # ספירת הצלחות\n        failed = 0  # ספירת כישלונות\n    \n        # רשימת הכפתורים במסך ניהול סוציומטרי\n        buttons = [\n            {\"name\": \"ניהול הסקר\", \"xpath\": \"//a[contains(text(), 'ניהול הסקר')]\"},\n            {\"name\": \"ניהול סוציומטרי\", \"xpath\": \"//a[contains(text(), 'ניהול סוציומטרי')]\"},\n            {\"name\": \"עונות\", \"xpath\": \"//input[contains(@value, 'עונות')]\"},\n            {\"name\": \"שאלות חובה\", \"xpath\": \"//input[contains(@value, 'שאלות חובה')]\"},\n            {\"name\": \"חוקים לבדיקת שאלונים חריגים\", \"xpath\": \"//input[contains(@value, 'חוקים לבדיקת שאלונים חריגים')]\"},\n            {\"name\": \"חוקים על שאלות\", \"xpath\": \"//input[contains(@value, 'חוקים על שאלות')]\"},\n            {\"name\": \"כללי השתתפות לפי סוג יחידה\", \"xpath\": \"//input[contains(@value, 'כללי השתתפות לפי סוג יחידה')]\"},\n            {\"name\": \"הגדרת השדות שיופיעו בטבלאות\", \"xpath\": \"//input[contains(@value, 'הגדרת השדות שיופיעו בטבלאות')]\"},\n            {\"name\": \"אופציות לסוציומטרי\", \"xpath\": \"//input[contains(@value, 'אופציות לסוציומטרי')]\"},\n            {\"name\": \"הגדרה וניהול סטטוסים לאירועים\", \"xpath\": \"//input[contains(@value, 'הגדרה וניהול סטטוסים לאירועים')]\"},\n            {\"name\": \"סיבות להוספת או הסרת משתתפים באירוע\", \"xpath\": \"//input[contains(@value, 'סיבות להוספת או הסרת משתתפים באירוע')]\"},\n            {\"name\": \"הגדרת כללי חריגות בגין מידת היכרות\", \"xpath\": \"//input[contains(@value, 'הגדרת שאלונים בהם מותר למחוק נתונים')]\"},  # עדכון XPath לפי הצורך\n            {\"name\": \"רשימת אשכולות לאיגוד קבוצות של היגדים\", \"xpath\": \"//input[contains(@value, 'רשימת אשכולות לאיגוד קבוצות של היגדים')]\"},\n            {\"name\": \"העברת משיבים ממאגר\", \"xpath\": \"//input[contains(@value, 'העברת משיבים ממאגר')]\"},\n            {\"name\": \"ניהול הרשאות משתמשים\", \"xpath\": \"//input[contains(@value, 'ניהול הרשאות משתמשים')]\"},\n            {\"name\": \"של פוטנציאל המשתתפים בסוציומטרי\", \"xpath\": \"//input[contains(@value, 'של פוטנציאל המשתתפים בסוציומטרי')]\"},\n            {\"name\": \"הגדרת חוקי העתקה של נתונים מחושבים לשאלון העזר\", \"xpath\": \"//input[contains(@value, 'הגדרת חוקי העתקה של נתונים מחושבים לשאלון העזר')]\"},\n            {\"name\": \"הגדרת כללים לחוקות חישוב\", \"xpath\": \"//input[contains(@value, 'הגדרת כללים לחוקות חישוב')]\"},\n            {\"name\": \"עריכה שדות במאגר המשיבים\", \"xpath\": \"//input[contains(@value, 'עריכה שדות במאגר המשיבים')]\"},\n            {\"name\": \"הגדרת שאלונים בהם מותר למחוק נתונים\", \"xpath\": \"//input[contains(@value, 'הגדרת שאלונים בהם מותר למחוק נתונים')]\"},\n            {\"name\": \"ייצוא דוחות אישיים\", \"xpath\": \"//input[contains(@value, 'ייצוא דוחות אישיים')]\"},\n            {\"name\": \"שיוך יחידות לאשכול\", \"xpath\": \"//input[contains(@value, 'שיוך יחידות לאשכול')]\"},\n            {\"name\": \"פלט אישי בתיקיית עובד\", \"xpath\": \"//input[contains(@value, 'פלט אישי בתיקיית עובד')]\"},\n             {\"name\": \"ניהול אירועים\", \"xpath\": \"//input[contains(@value, 'ניהול אירועים')]\"},\n        ]\n    \n        def close_alert_if_present():\n            \"\"\"\n            בודקת אם יש חלון Alert פתוח, ואם כן, סוגרת אותו.\n            \"\"\"\n            try:\n                alert = Alert(driver)\n                alert.accept()\n                allure.attach(\"חלון Alert נסגר בהצלחה\", name=\"Alert\", attachment_type=allure.attachment_type.TEXT)\n            except Exception as e:\n                allure.attach(f\"הודעת Alert לא נמצאה: {e}\", name=\"Alert Info\", attachment_type=allure.attachment_type.TEXT)\n    \n        try:\n            with allure.step(\"פתיחת האתר והתחברות\"):\n                driver.get(\"https://www.survey.co.il/pms/MMDANEW/default.asp\")\n                time.sleep(0.5)\n                username = driver.find_element(By.NAME, \"login\")\n                password = driver.find_element(By.NAME, \"password\")\n                username.send_keys(\"MARINAS\")\n                password.send_keys(\"Ms123456\")\n                password.send_keys(Keys.RETURN)\n                time.sleep(0.5)\n                allure.attach(driver.current_url, name=\"כתובת האתר לאחר התחברות\", attachment_type=allure.attachment_type.TEXT)\n    \n            with allure.step(\"מעבר למסך ניהול סוציומטרי\"):\n                close_alert_if_present()\n                manage_survey_button = WebDriverWait(driver, 10).until(\n                    EC.presence_of_element_located((By.XPATH, buttons[0][\"xpath\"]))\n                )\n                actions = ActionChains(driver)\n                actions.move_to_element(manage_survey_button).perform()\n                time.sleep(0.5)\n                close_alert_if_present()\n                soc_button = WebDriverWait(driver, 10).until(\n                    EC.element_to_be_clickable((By.XPATH, buttons[1][\"xpath\"]))\n                )\n                soc_button.click()\n                time.sleep(0.5)\n                allure.attach(driver.current_url, name=\"כתובת האתר במסך סוציומטרי\", attachment_type=allure.attachment_type.TEXT)\n    \n            # מעבר על שאר הכפתורים במסך ניהול סוציומטרי\n            for button in buttons[2:22]:\n                if button[\"name\"] == \"עונות\":\n                    with allure.step(\"בדיקות פנימיות עבור 'עונות'\"):\n                        close_alert_if_present()\n                        seasons_button = WebDriverWait(driver, 10).until(\n                            EC.element_to_be_clickable((By.XPATH, button[\"xpath\"]))\n                        )\n                        seasons_button.click()\n                        time.sleep(0.5)\n                        with allure.step(\"לחיצה על 'שאלות חובה לסוציומטרי' וחזרה\"):\n                            mandatory_btn = WebDriverWait(driver, 10).until(\n                                EC.element_to_be_clickable((By.XPATH, \"//input[contains(@value, 'שאלות חובה לסוציומטרי')]\"))\n                            )\n                            mandatory_btn.click()\n                            time.sleep(0.5)\n                            driver.back()\n                            time.sleep(0.5)\n                            passed += 1\n                        with allure.step(\"לחיצה על 'שדות לפילטור' וחזרה\"):\n                            filter_btn = WebDriverWait(driver, 10).until(\n                                EC.element_to_be_clickable((By.XPATH, \"//input[contains(@value, 'שדות לפילטור')]\"))\n                            )\n                            filter_btn.click()\n                            time.sleep(0.5)\n                            driver.back()\n                            time.sleep(0.5)\n                            passed += 1\n                        with allure.step(\"לחיצה על 'עריכה' וחזרה\"):\n                            edit_btn = WebDriverWait(driver, 10).until(\n                                EC.element_to_be_clickable((By.XPATH, \"//input[contains(@value, 'עריכה')]\"))\n                            )\n                            edit_btn.click()\n                            time.sleep(0.5)\n                            driver.back()\n                            time.sleep(0.5)\n                            passed += 1\n                        with allure.step(\"לחיצה על 'פתח את ניהול' וחזרה\"):\n                            allure.attach(driver.get_screenshot_as_png(), name=\"Before Edit Click\", attachment_type=allure.attachment_type.PNG)\n                            open_mgmt_btn = WebDriverWait(driver, 10).until(\n                                EC.element_to_be_clickable((By.XPATH, \"//input[contains(@value, 'פתח את ניהול')]\"))\n                            )\n                            open_mgmt_btn.click()\n                            time.sleep(0.5)\n                            allure.attach(driver.get_screenshot_as_png(), name=\"After Edit Click\", attachment_type=allure.attachment_type.PNG)\n                            driver.back()\n                            time.sleep(0.5)\n                            passed += 1\n                        with allure.step(\"יציאה ממסך 'עונות' וחזרה למסך ניהול סוציומטרי\"):\n                            driver.back()\n                            time.sleep(0.5)\n                        passed += 1\n                elif button[\"name\"] == \"שאלות חובה\":\n                    with allure.step(\"בדיקות פנימיות עבור 'שאלות חובה'\"):\n                        close_alert_if_present()\n                        questions_btn = WebDriverWait(driver, 10).until(\n                            EC.element_to_be_clickable((By.XPATH, button[\"xpath\"]))\n                        )\n                        questions_btn.click()\n                        time.sleep(0.5)\n                        with allure.step(\"לחיצה על 'ערוך' וחזרה\"):\n                            edit_btn = WebDriverWait(driver, 10).until(\n                                EC.element_to_be_clickable((By.XPATH, \"//input[contains(@value, 'ערוך')]\"))\n                            )\n                            edit_btn.click()\n                            time.sleep(0.5)\n                            driver.back()\n                            time.sleep(0.5)\n                        passed += 1\n                        driver.back()\n                        time.sleep(0.5)\n                elif button[\"name\"] == \"חוקים על שאלות\":\n                    with allure.step(\"בדיקות פנימיות עבור 'חוקים על שאלות'\"):\n                        with allure.step(\"כניסה למסך 'חוקים על שאלות'\"):\n                            element = WebDriverWait(driver, 10).until(\n                                EC.element_to_be_clickable((By.XPATH, button[\"xpath\"]))\n                            )\n                            element.click()\n                            time.sleep(1)\n                        with allure.step(\"הקלדה בתיבת החיפוש בתוך 'חוקים על שאלות'\"):\n                            search_input = WebDriverWait(driver, 10).until(\n                                EC.visibility_of_element_located((By.ID, \"dt-search-0\"))\n                            )\n                            search_input.clear()\n                            search_input.send_keys(\"שי אגיב שי אגיב\")\n                            time.sleep(0.5)\n                            passed += 1\n                        with allure.step(\"לחיצה על 'שאלון סוציומטרי' בתוך 'חוקים על שאלות'\"):\n                            combo = WebDriverWait(driver, 10).until(\n                                EC.element_to_be_clickable((By.CSS_SELECTOR, \"svg.ss-arrow\"))\n                            )\n                            combo.click()\n                            time.sleep(0.5)\n                            passed += 1\n    \n                        driver.back()\n                        time.sleep(0.5)\n    \n                elif button[\"name\"] == \"כללי השתתפות לפי סוג יחידה\":\n                    with allure.step(\"בדיקות פנימיות עבור 'כללי השתתפות לפי סוג יחידה'\"):\n                        close_alert_if_present()\n                        unit_participation_btn = WebDriverWait(driver, 10).until(\n                            EC.element_to_be_clickable((By.XPATH, button[\"xpath\"]))\n                        )\n                        unit_participation_btn.click()\n                        time.sleep(0.5)\n                        with allure.step(\"לחיצה על 'הוסף ימי היעדרות' וחזרה\"):\n                            add_absence_btn = WebDriverWait(driver, 10).until(\n                                EC.element_to_be_clickable((By.XPATH, \"//input[contains(@value, 'הוסף ימי היעדרות')]\"))\n                            )\n                            add_absence_btn.click()\n                            time.sleep(0.5)\n                            driver.back()\n                            time.sleep(0.5)\n                            driver.back()\n                            time.sleep(0.5)\n                            passed += 1\n                elif button[\"name\"] == \"אופציות לסוציומטרי\":\n                    with allure.step(\"בדיקות פנימיות עבור 'אופציות לסוציומטרי'\"):\n                        options_button = WebDriverWait(driver, 10).until(\n                            EC.element_to_be_clickable((By.XPATH, button[\"xpath\"]))\n                        )\n                        options_button.click()\n                        time.sleep(0.5)\n    \n                        with allure.step(\"לחיצה על 'שמור' וחזרה\"):\n                            save_button = WebDriverWait(driver, 10).until(\n                                EC.element_to_be_clickable((By.XPATH, \"//input[contains(@value, 'שמור')]\"))\n                            )\n                            save_button.click()\n                            time.sleep(0.5)\n                            driver.execute_script(\"\"\"\n                                  var message = document.createElement('div');\n                                  message.innerText = '✅ לחצתי על שמור!';\n                                  message.style.position = 'fixed';\n             message.style.top = '20px';\n            message.style.right = '20px';\n            message.style.backgroundColor = 'green';\n            message.style.color = 'white';\n            message.style.padding = '10px';\n            message.style.borderRadius = '5px';\n            message.style.zIndex = '9999';\n            message.style.fontSize = '20px';\n            document.body.appendChild(message);\n            setTimeout(function(){ message.remove(); }, 10000); // ההודעה תיעלם אחרי 3 שניות\n        \"\"\")\n                            driver.back()\n    \n                        passed += 1\n                        driver.back()\n                        time.sleep(0.5)\n    \n    \n                else:\n                    with allure.step(f\"בדיקת כפתור '{button['name']}'\"):\n                        try:\n                            close_alert_if_present()\n                            element = WebDriverWait(driver, 10).until(\n                                EC.element_to_be_clickable((By.XPATH, button[\"xpath\"]))\n                            )\n                            element.click()\n                            allure.attach(f\"לחיצה על '{button['name']}' הצליחה\", name=\"לחיצה\", attachment_type=allure.attachment_type.TEXT)\n                            passed += 1\n                            time.sleep(0.5)\n                            driver.back()\n                            time.sleep(0.5)\n                        except Exception as e:\n                            allure.attach(f\"לחיצה על '{button['name']}' נכשלה! שגיאה: {e}\", name=\"שגיאה\", attachment_type=allure.attachment_type.TEXT)\n                            failed += 1\n    \n    \n    \n    \n    \n    \n    \n    \n        finally:\n            time.sleep(3.5)\n>           driver.execute_script(\"new Audio('https://www.soundjay.com/button/beep-07.wav').play();\")\n\nauto\\test_survey.py:281: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\..\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:528: in execute_script\n    return self.execute(command, {\"script\": script, \"args\": converted_args})[\"value\"]\n..\\..\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:429: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x00000215E925B770>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such window\",\"message\":\"no such window: target window already closed\\\\...A09735A9+5465]\\\\n\\\\tBaseThreadInitThunk [0x00007FFB32197374+20]\\\\n\\\\tRtlUserThreadStart [0x00007FFB33AFCC91+33]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchWindowException: Message: no such window: target window already closed\nE       from unknown error: web view not found\nE         (Session info: chrome=135.0.7049.85)\nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF6A0985355+78597]\nE       \tGetHandleVerifier [0x00007FF6A09853B0+78688]\nE       \t(No symbol) [0x00007FF6A07391AA]\nE       \t(No symbol) [0x00007FF6A0711B63]\nE       \t(No symbol) [0x00007FF6A07BEB6E]\nE       \t(No symbol) [0x00007FF6A07DEBB2]\nE       \t(No symbol) [0x00007FF6A07B6EC3]\nE       \t(No symbol) [0x00007FF6A07803F8]\nE       \t(No symbol) [0x00007FF6A0781163]\nE       \tGetHandleVerifier [0x00007FF6A0C2EF0D+2870973]\nE       \tGetHandleVerifier [0x00007FF6A0C296B8+2848360]\nE       \tGetHandleVerifier [0x00007FF6A0C46993+2967875]\nE       \tGetHandleVerifier [0x00007FF6A09A019A+188746]\nE       \tGetHandleVerifier [0x00007FF6A09A847F+222255]\nE       \tGetHandleVerifier [0x00007FF6A098D2D4+111236]\nE       \tGetHandleVerifier [0x00007FF6A098D482+111666]\nE       \tGetHandleVerifier [0x00007FF6A09735A9+5465]\nE       \tBaseThreadInitThunk [0x00007FFB32197374+20]\nE       \tRtlUserThreadStart [0x00007FFB33AFCC91+33]\n\n..\\..\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:232: NoSuchWindowException"}, "descriptionHtml": "\n    <h2>תיאור הבדיקה</h2>\n    <p>בדיקה מקיפה של לחצנים באתר ניהול סקרים, הכוללת מעבר בין מסכים ובדיקות פנימיות\n    על רכיבי ממשק שונים. הבדיקה כוללת:</p>\n    <ul>\n      <li>כניסה למסך ניהול סקרים והתחברות עם שם משתמש וסיסמה.</li>\n      <li>מעבר בין מסכים כמו 'עונות', 'שאלות חובה' ו'חוקים על שאלות'.</li>\n      <li>בדיקות פנימיות הכוללות לחיצות, חזרה למסך הקודם והקלדה בתיבות חיפוש.</li>\n      <li>תיעוד מפורט של כל שלב בדוח Allure.</li>\n    </ul>\n", "steps": [{"name": "פתיחת האתר והתחברות", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchWindowException: Message: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome=135.0.7049.85)\nStacktrace:\n\tGetHandleVerifier [0x00007FF6A0985355+78597]\n\tGetHandleVerifier [0x00007FF6A09853B0+78688]\n\t(No symbol) [0x00007FF6A07391AA]\n\t(No symbol) [0x00007FF6A0711B63]\n\t(No symbol) [0x00007FF6A07BEB6E]\n\t(No symbol) [0x00007FF6A07DEBB2]\n\t(No symbol) [0x00007FF6A07B6EC3]\n\t(No symbol) [0x00007FF6A07803F8]\n\t(No symbol) [0x00007FF6A0781163]\n\tGetHandleVerifier [0x00007FF6A0C2EF0D+2870973]\n\tGetHandleVerifier [0x00007FF6A0C296B8+2848360]\n\tGetHandleVerifier [0x00007FF6A0C46993+2967875]\n\tGetHandleVerifier [0x00007FF6A09A019A+188746]\n\tGetHandleVerifier [0x00007FF6A09A847F+222255]\n\tGetHandleVerifier [0x00007FF6A098D2D4+111236]\n\tGetHandleVerifier [0x00007FF6A098D482+111666]\n\tGetHandleVerifier [0x00007FF6A09735A9+5465]\n\tBaseThreadInitThunk [0x00007FFB32197374+20]\n\tRtlUserThreadStart [0x00007FFB33AFCC91+33]\n\n", "trace": "  File \"C:\\Users\\User\\Documents\\automation\\auto\\test_survey.py\", line 78, in test_survey_buttons\n    username = driver.find_element(By.NAME, \"login\")\n  File \"C:\\Users\\User\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 888, in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n           ~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\User\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 429, in execute\n    self.error_handler.check_response(response)\n    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^\n  File \"C:\\Users\\User\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 232, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "start": 1744787540486, "stop": 1744787541924}], "start": 1744787536435, "stop": 1744787545455, "uuid": "13217323-52d2-45df-b84f-dba868af41c0", "historyId": "f62fb0bc9ba8d89356e81292b6fb5347", "testCaseId": "f62fb0bc9ba8d89356e81292b6fb5347", "fullName": "auto.test_survey#test_survey_buttons", "labels": [{"name": "tag", "value": "Regression"}, {"name": "tag", "value": "Selenium"}, {"name": "severity", "value": "critical"}, {"name": "epic", "value": "מערכת ניהול סקרים"}, {"name": "tag", "value": "UI"}, {"name": "story", "value": "בדיקת לחצנים באתר תמורות"}, {"name": "feature", "value": "ניהול סקרים"}, {"name": "tag", "value": "Automation"}, {"name": "parentSuite", "value": "auto"}, {"name": "suite", "value": "test_survey"}, {"name": "host", "value": "DESKTOP-G8GD8K9"}, {"name": "thread", "value": "8716-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "auto.test_survey"}]}